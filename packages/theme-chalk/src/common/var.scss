@use 'sass:math';
@use 'sass:map';

// types
$types: primary, success, warning, danger, error, info;

// Color
$colors: () !default;
$colors: map.deep-merge(
  (
    'white': #ffffff,
    'black': #000000,
    'primary': (
      'base': #4169e1,
    ),
    'success': (
      'base': #32cd32,
    ),
    'warning': (
      'base': #daa520,
    ),
    'danger': (
      'base': #a52a2a,
    ),
    'error': (
      'base': #a52a2a,
    ),
    'info': (
      'base': #909399,
    ),
  ),
  $colors
);

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

// 设置不同等级的颜色
// mix colors with white/black to generate light/dark level
@mixin set-color-mix-level(
  $type,
  $number,
  $mode: 'light',
  $mix-color: $color-white
) {
  $mix: mix(
    $mix-color,
    map.get($colors, $type, 'base'),
    math.percentage(math.div($number, 10))
  );
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}': $mix,
      ),
    ),
    $colors
  ) !global;
}

// 设置主题色level
// $colors.primary.light-i
// --h-color-primary-light-i
@each $type in $types {
  @for $i from 1 through 9 {
    @include set-color-mix-level($type, $i, 'light', $color-white);
  }
}
